<!DOCTYPE html>
<html>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<title>dataType</title>
<head>
<script type="text/javascript" src="jquery-1.7.js"></script>
<style type="text/css">
*{list-style:none;font-size:12px;font-family:tahoma;letter-spacing:1px;text-decoration:none;}

.panel{background:blue;padding:10px;color:#fff;}
p{background:purple;padding:10px;color:#fff;}


#content{width:600px;height:160px;}

</style>
</head>
<body>
<pre>
<b>dataType</b>
预期服务器返回的数据类型。如果不指定，jQuery 将自动根据 HTTP 包 MIME 信息来智能判断，比如XML MIME类型就被识别为XML。
在1.4中，JSON就会生成一个JavaScript对象，而script则会执行这个脚本。随后服务器端返回的数据会根据这个值解析后，传递给回调函数。可用值:
"xml": 返回 XML 文档，可用 jQuery 处理。
"html": 返回纯文本 HTML 信息；包含的script标签会在插入dom时执行。
"script": 返回纯文本 JavaScript 代码。不会自动缓存结果。除非设置了"cache"参数。'''注意：'''在远程请求时(不在同一个域下)，所有POST请求都将转为GET请求。(因为将使用DOM的script标签来加载)
"json": 返回 JSON 数据 。
"jsonp": JSONP 格式。使用 JSONP 形式调用函数时，如 "myurl?callback=?" jQuery 将自动替换 ? 为正确的函数名，以执行回调函数。
"text": 返回纯文本字符串
</pre>

<div class="panel">welcome to jQuery!</div>
<p id="result">result</p>

<form method="post" action="" id="form1" onsubmit="">

<input type="text" id="name1" name="txt1" value="aaa"/>
<input type="text" id="name2" name="txt2" value="bbb"/>

<input type="button" id="btn1" name="btn1" value="确 定1" onclick="" />
<input type="button" id="btn2" name="btn2" value="确 定2" onclick="" />

<br />
<textarea id="content" name="content"></textarea>

</form>

<script type="text/javascript">

$.ajax({
type: "GET",
url: "a.js",						 //  载入并执行一个JavaScript文件。
dataType:   "script"
})


$("#result").ajaxComplete(
function(request, settings){
$(this).append("<strong>Request Complete</strong>");
}
);

$("div.panel").ajaxSuccess(
function(request, settings){
$(this).html("<i>Successful Request!</i>");
}
);
</script>

</body></html>
